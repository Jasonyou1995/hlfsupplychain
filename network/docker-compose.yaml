# Enterprise Hyperledger Fabric Supply Chain Platform v2.5+
# Production-Ready Docker Compose Configuration
# Author: Supply Chain Platform Team
# Last Modified: December 16, 2024
# License: Apache-2.0

version: '3.8'

volumes:
  orderer1.supplychain.com:
  orderer2.supplychain.com:
  orderer3.supplychain.com:
  peer0.manufacturer.supplychain.com:
  peer1.manufacturer.supplychain.com:
  peer0.supplier.supplychain.com:
  peer1.supplier.supplychain.com:
  peer0.logistics.supplychain.com:
  peer1.logistics.supplychain.com:
  peer0.retailer.supplychain.com:
  peer1.retailer.supplychain.com:
  peer0.auditor.supplychain.com:
  peer1.auditor.supplychain.com:

networks:
  supplychain-network:
    name: supplychain-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

services:
  # Certificate Authority Services
  ca.manufacturer.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-manufacturer
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:17054
    ports:
      - "7054:7054"
      - "17054:17054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/manufacturer:/etc/hyperledger/fabric-ca-server
    container_name: ca.manufacturer.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ca.supplier.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-supplier
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=8054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:18054
    ports:
      - "8054:8054"
      - "18054:18054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/supplier:/etc/hyperledger/fabric-ca-server
    container_name: ca.supplier.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ca.logistics.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-logistics
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=9054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:19054
    ports:
      - "9054:9054"
      - "19054:19054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/logistics:/etc/hyperledger/fabric-ca-server
    container_name: ca.logistics.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ca.retailer.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-retailer
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=10054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:20054
    ports:
      - "10054:10054"
      - "20054:20054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/retailer:/etc/hyperledger/fabric-ca-server
    container_name: ca.retailer.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ca.auditor.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-auditor
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=11054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:21054
    ports:
      - "11054:11054"
      - "21054:21054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/auditor:/etc/hyperledger/fabric-ca-server
    container_name: ca.auditor.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ca.orderer.supplychain.com:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-orderer
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=6054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:16054
    ports:
      - "6054:6054"
      - "16054:16054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./organizations/fabric-ca/ordererOrg:/etc/hyperledger/fabric-ca-server
    container_name: ca.orderer.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Orderer Services (Raft Consensus)
  orderer1.supplychain.com:
    image: hyperledger/fabric-orderer:2.5.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:17050
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer1.supplychain.com/msp:/var/hyperledger/orderer/msp
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer1.supplychain.com/tls/:/var/hyperledger/orderer/tls
      - orderer1.supplychain.com:/var/hyperledger/production/orderer
    ports:
      - "7050:7050"
      - "7053:7053"
      - "17050:17050"
    container_name: orderer1.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  orderer2.supplychain.com:
    image: hyperledger/fabric-orderer:2.5.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:17050
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer2.supplychain.com/msp:/var/hyperledger/orderer/msp
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer2.supplychain.com/tls/:/var/hyperledger/orderer/tls
      - orderer2.supplychain.com:/var/hyperledger/production/orderer
    ports:
      - "8050:7050"
      - "8053:7053"
      - "18050:17050"
    container_name: orderer2.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  orderer3.supplychain.com:
    image: hyperledger/fabric-orderer:2.5.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:17050
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer3.supplychain.com/msp:/var/hyperledger/orderer/msp
      - ./organizations/ordererOrganizations/supplychain.com/orderers/orderer3.supplychain.com/tls/:/var/hyperledger/orderer/tls
      - orderer3.supplychain.com:/var/hyperledger/production/orderer
    ports:
      - "9050:7050"
      - "9053:7053"
      - "19050:17050"
    container_name: orderer3.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Manufacturer Organization Peers
  peer0.manufacturer.supplychain.com:
    image: hyperledger/fabric-peer:2.5.5
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=supplychain-network
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.manufacturer.supplychain.com
      - CORE_PEER_ADDRESS=peer0.manufacturer.supplychain.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.manufacturer.supplychain.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.manufacturer.supplychain.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.manufacturer.supplychain.com:7051
      - CORE_PEER_LOCALMSPID=ManufacturerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17051
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0.manufacturer.supplychain.com"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_GATEWAY_ENABLED=true
    volumes:
      - /var/run/:/host/var/run/
      - ./organizations/peerOrganizations/manufacturer.supplychain.com/peers/peer0.manufacturer.supplychain.com/msp:/etc/hyperledger/fabric/msp
      - ./organizations/peerOrganizations/manufacturer.supplychain.com/peers/peer0.manufacturer.supplychain.com/tls:/etc/hyperledger/fabric/tls
      - peer0.manufacturer.supplychain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - "7051:7051"
      - "17051:17051"
    container_name: peer0.manufacturer.supplychain.com
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Gateway Service (New in v2.5+)
  gateway.manufacturer.supplychain.com:
    image: hyperledger/fabric-gateway:2.5.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - GATEWAY_PEER_ENDPOINT=peer0.manufacturer.supplychain.com:7051
      - GATEWAY_PEER_TLS_ENABLED=true
      - GATEWAY_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - GATEWAY_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - GATEWAY_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - GATEWAY_LISTEN_ADDRESS=0.0.0.0:7052
      - GATEWAY_OPERATIONS_LISTENADDRESS=0.0.0.0:17052
      - GATEWAY_METRICS_PROVIDER=prometheus
    volumes:
      - ./organizations/peerOrganizations/manufacturer.supplychain.com/peers/peer0.manufacturer.supplychain.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - "7052:7052"
      - "17052:17052"
    container_name: gateway.manufacturer.supplychain.com
    networks:
      - supplychain-network
    depends_on:
      - peer0.manufacturer.supplychain.com
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # CLI Tool (Updated for v2.5+)
  cli:
    image: hyperledger/fabric-tools:2.5.5
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./chaincode:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode
    depends_on:
      - orderer1.supplychain.com
      - peer0.manufacturer.supplychain.com
    container_name: cli
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # CouchDB for Manufacturer (Optional - for rich queries)
  couchdb.manufacturer:
    image: couchdb:3.2.2
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
    ports:
      - "5984:5984"
    container_name: couchdb.manufacturer
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Monitoring and Observability
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      - supplychain-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    container_name: grafana
    networks:
      - supplychain-network
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M 